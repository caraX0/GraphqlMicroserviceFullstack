global:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 1
  imagePullSecrets: []

serviceAccount:
  name: internal-app

apolloGateway:
  supergraph:
    path: /etc/config/supergraph.graphql
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPU: 80
    targetMemory: 80
  replicaCount: 2
  containerPorts:
    http: 4000
  image:
    repository: suayb/apollo-gateway
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 4000
    clusterIP:
    loadBalancerIP:
  environment:
  ingress:
    enabled: true
    certManager: false
    annotations:
      kubernetes.io/ingress.class: "nginx"
    path: /graphql
    hostName: gqlmsweb.susimsek.github.io
    tls: [ ]
  resources:
  readinessProbe:
    enabled: true
    httpGet:
      path: /.well-known/apollo/server-health
      port: http
      scheme: HTTP
  livenessProbe:
    enabled: true
    httpGet:
      path:  /.well-known/apollo/server-health
      port: http
      scheme: HTTP
  customLivenessProbe: { }
  customReadinessProbe: { }
  extraVolumeMounts: []
  extraVolumes: []

web:
  replicaCount: 1
  containerPorts:
    http: 3000
  image:
    repository: suayb/graphql-web
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 3000
    clusterIP:
    loadBalancerIP:
  ingress:
    enabled: true
    certManager: false
    annotations:
      kubernetes.io/ingress.class: "nginx"
    path: /
    hostName: gqlmsweb.susimsek.github.io
    tls: []
  resources:
    requests:
      cpu: 200m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 250Mi
  readinessProbe:
    enabled: true
    httpGet:
      path: /index.html
      port: http
      scheme: HTTP
      httpHeaders: [ ]
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 1
    successThreshold: 1
  livenessProbe:
    enabled: true
    httpGet:
      path: /index.html
      port: http
      scheme: HTTP
      httpHeaders: [ ]
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 1
    successThreshold: 1
  customLivenessProbe: { }
  customReadinessProbe: { }
  extraVolumeMounts: []
  extraVolumes: []

authService:
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPU: 80
    targetMemory: 80
  replicaCount: 1
  containerPorts:
    http: 9000
  image:
    repository: suayb/auth-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 9000
    clusterIP:
    loadBalancerIP:
  environment:
  ingress:
    enabled: true
    certManager: false
    annotations:
      kubernetes.io/ingress.class: "nginx"
    path: /
    hostName: auth.susimsek.github.io
    tls: [ ]
  resources:
    requests:
      cpu: 800m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi
  readinessProbe:
    enabled: true
    httpGet:
      path: /actuator/health/readiness
      port: http
      scheme: HTTP
      httpHeaders: [ ]
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 6
    successThreshold: 1
  livenessProbe:
    enabled: true
    httpGet:
      path: /actuator/health/liveness
      port: http
      scheme: HTTP
      httpHeaders: [ ]
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1
  customLivenessProbe: { }
  customReadinessProbe: { }
  extraVolumeMounts: [ ]
  extraVolumes: [ ]

productService:
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPU: 80
    targetMemory: 80
  replicaCount: 1
  containerPorts:
    http: 8081
  image:
    repository: suayb/product-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8081
    clusterIP:
    loadBalancerIP:
  environment:
  resources:
    requests:
      cpu: 800m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi
  readinessProbe:
    enabled: true
    httpGet:
      path: /actuator/health/readiness
      port: http
      scheme: HTTP
      httpHeaders: [ ]
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 6
    successThreshold: 1
  livenessProbe:
    enabled: true
    httpGet:
      path: /actuator/health/liveness
      port: http
      scheme: HTTP
      httpHeaders: [ ]
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1
  customLivenessProbe: { }
  customReadinessProbe: { }
  extraVolumeMounts: [ ]
  extraVolumes: [ ]

reviewService:
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPU: 80
    targetMemory: 80
  replicaCount: 1
  containerPorts:
    http: 8082
  image:
    repository: suayb/review-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8082
    clusterIP:
    loadBalancerIP:
  environment:
  resources:
    requests:
      cpu: 800m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi
  readinessProbe:
    enabled: true
    httpGet:
      path: /actuator/health/readiness
      port: http
      scheme: HTTP
      httpHeaders: [ ]
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 6
    successThreshold: 1
  livenessProbe:
    enabled: true
    httpGet:
      path: /actuator/health/liveness
      port: http
      scheme: HTTP
      httpHeaders: [ ]
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1
  customLivenessProbe: { }
  customReadinessProbe: { }
  extraVolumeMounts: [ ]
  extraVolumes: [ ]