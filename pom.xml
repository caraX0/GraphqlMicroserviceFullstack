<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.susimsek</groupId>
	<artifactId>ms-parent</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<name>ms-parent</name>
	<description>Spring Boot Microservices Parent</description>

	<modules>
		<module>ms-common-web</module>
		<module>auth-service</module>
		<module>product-service</module>
		<module>review-service</module>
	</modules>

	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Şuayb Şimşek</name>
			<email>suaybsimsek58@gmail.com</email>
		</developer>
	</developers>

	<scm>
		<url>git@github.com:susimsek/spring-boot-graphql-micro-service.git</url>
		<connection>scm:git:git@github.com:susimsek/spring-boot-graphql-micro-service.git
		</connection>
		<developerConnection>
			scm:git:git@github.com:susimsek/spring-boot-graphql-micro-service.git
		</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<properties>
		<java.version>17</java.version>
		<kotlin.version>1.6.21</kotlin.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<spring-boot.version>2.7.0</spring-boot.version>
		<spring-cloud.version>2021.0.3</spring-cloud.version>
		<spring-native.version>0.12.0</spring-native.version>
		<repackage.classifier/>
		<maven-javadoc-plugin.version>3.4.0</maven-javadoc-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<maven-source-plugin.version>3.2.1</maven-source-plugin.version>
		<nexus-staging-maven-plugin>1.6.13</nexus-staging-maven-plugin>
		<federation-graphql-java-support.version>2.0.2</federation-graphql-java-support.version>
		<spring-security-oauth2-authorization-server.version>0.3.1</spring-security-oauth2-authorization-server.version>
		<logstash-logback-encoder.version>7.2</logstash-logback-encoder.version>
		<webjars-bootstrap.version>5.1.3</webjars-bootstrap.version>
		<webjars-font-awesome.version>4.7.0</webjars-font-awesome.version>
		<jib-maven-plugin.version>3.2.1</jib-maven-plugin.version>
		<jib-maven-plugin.architecture>amd64</jib-maven-plugin.architecture>
		<jib.from.image>eclipse-temurin:17-jre-focal</jib.from.image>
		<maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
		<sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
		<properties-maven-plugin.version>1.1.0</properties-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
		<docker.image.name/>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.apollographql.federation</groupId>
				<artifactId>federation-graphql-java-support</artifactId>
				<version>${federation-graphql-java-support.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-oauth2-authorization-server</artifactId>
				<version>${spring-security-oauth2-authorization-server.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars.npm</groupId>
				<artifactId>bootstrap</artifactId>
				<version>${webjars-bootstrap.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars.npm</groupId>
				<artifactId>font-awesome</artifactId>
				<version>${webjars-font-awesome.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-native</artifactId>
				<version>${spring-native.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-aot</artifactId>
				<version>${spring-native.version}</version>
			</dependency>
			<dependency>
				<groupId>net.logstash.logback</groupId>
				<artifactId>logstash-logback-encoder</artifactId>
				<version>${logstash-logback-encoder.version}</version>
				<exclusions>
					<exclusion>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
					</exclusion>
					<exclusion>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-access</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<version>${kotlin.version}</version>
				<executions>
					<execution>
						<id>kapt</id>
						<goals>
							<goal>kapt</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/main/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
					<execution>
						<id>compile</id>
						<phase>process-sources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/main/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
					<execution>
						<id>test-compile</id>
						<phase>process-test-sources</phase>
						<goals>
							<goal>test-compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/test/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<jvmTarget>${java.version}</jvmTarget>
					<javaParameters>true</javaParameters>
					<args>
						<arg>-Xjvm-default=enable</arg>
					</args>
					<compilerPlugins>
						<plugin>spring</plugin>
					</compilerPlugins>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-allopen</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<executions>
					<!-- Replacing default-compile as it is treated specially by maven -->
					<execution>
						<id>default-compile</id>
						<phase>none</phase>
					</execution>
					<!-- Replacing default-testCompile as it is treated specially by maven -->
					<execution>
						<id>default-testCompile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>java-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>java-test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<proc>none</proc>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
							<useDefaultDelimiters>false</useDefaultDelimiters>
							<delimiters>
								<delimiter>#</delimiter>
							</delimiters>
							<resources>
								<resource>
									<directory>src/main/resources/</directory>
									<filtering>true</filtering>
									<includes>
										<include>config/*.yml</include>
									</includes>
								</resource>
								<resource>
									<directory>src/main/resources/</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>config/*.yml</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<version>${spring-boot.version}</version>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<optional>true</optional>
				</dependency>
			</dependencies>
			<properties>
				<spring.profiles.active>local</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<version>${spring-boot.version}</version>
					</plugin>
				</plugins>
			</build>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>native</id>
			<properties>
				<repackage.classifier>exec</repackage.classifier>
				<native-buildtools.version>0.9.11</native-buildtools.version>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.junit.platform</groupId>
					<artifactId>junit-platform-launcher</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native-buildtools.version}</version>
						<extensions>true</extensions>
						<configuration>
							<buildArgs>
								<buildArg>--enable-https</buildArg>
								<buildArg>--enable-http</buildArg>
								<buildArg>
									--initialize-at-build-time=sun.instrument.InstrumentationImpl
								</buildArg>
								<buildArg>
									--initialize-at-run-time=io.netty.handler.ssl.BouncyCastleAlpnSslUtils
								</buildArg>
							</buildArgs>
						</configuration>
						<executions>
							<execution>
								<id>test-native</id>
								<phase>test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
							<execution>
								<id>build-native</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<classifier>${repackage.classifier}</classifier>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.experimental</groupId>
						<artifactId>spring-aot-maven-plugin</artifactId>
						<version>${spring-native.version}</version>
						<executions>
							<execution>
								<id>test-generate</id>
								<goals>
									<goal>test-generate</goal>
								</goals>
							</execution>
							<execution>
								<id>generate</id>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>native-image</id>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<classifier>${repackage.classifier}</classifier>
							<image>
								<builder>paketobuildpacks/builder:tiny</builder>
								<name>${docker.image.name}</name>
								<publish>true</publish>
								<pullPolicy>IF_NOT_PRESENT</pullPolicy>
								<env>
									<BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
									<BP_BINARY_COMPRESSION_METHOD>upx</BP_BINARY_COMPRESSION_METHOD>
									<BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
										-H:+ReportExceptionStackTraces
										--enable-https
										--enable-http
										--initialize-at-build-time=sun.instrument.InstrumentationImpl
										--initialize-at-run-time=io.netty.handler.ssl.BouncyCastleAlpnSslUtils
									</BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
								</env>
							</image>
							<docker>
								<publishRegistry>
									<username>${DOCKER_REGISTRY_USER}</username>
									<password>${DOCKER_REGISTRY_PWD}</password>
								</publishRegistry>
							</docker>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.experimental</groupId>
						<artifactId>spring-aot-maven-plugin</artifactId>
						<version>${spring-native.version}</version>
						<executions>
							<execution>
								<id>test-generate</id>
								<goals>
									<goal>test-generate</goal>
								</goals>
							</execution>
							<execution>
								<id>generate</id>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jib</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<version>${spring-boot.version}</version>
					</plugin>
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<version>${jib-maven-plugin.version}</version>
						<configuration>
							<from>
								<image>${jib.from.image}</image>
								<platforms>
									<platform>
										<architecture>${jib-maven-plugin.architecture}</architecture>
										<os>linux</os>
									</platform>
								</platforms>
							</from>
							<to>
								<image>${docker.image.name}</image>
								<auth>
									<username>${DOCKER_REGISTRY_USER}</username>
									<password>${DOCKER_REGISTRY_PWD}</password>
								</auth>
							</to>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>gpg</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
						<version>${maven-source-plugin.version}</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin.version}</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven-gpg-plugin.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>${nexus-staging-maven-plugin}</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-release-plugin</artifactId>
						<version>${maven-release-plugin.version}</version>
						<configuration>
							<tagNameFormat>v@{project.version}</tagNameFormat>
							<autoVersionSubmodules>true</autoVersionSubmodules>
							<useReleaseProfile>false</useReleaseProfile>
							<releaseProfiles>gpg</releaseProfiles>
							<goals>deploy</goals>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>${sonar-maven-plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>pre-unit-tests</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>pre-integration-tests</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>post-integration-tests</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report-integration</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>${properties-maven-plugin.version}</version>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>sonar-project.properties</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>snapshots-repo</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-release</id>
			<name>Spring release</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshot</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestone</id>
			<name>Spring Milestone</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-release</id>
			<name>Spring release</name>
			<url>https://repo.spring.io/release</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestone</id>
			<name>Spring milestone</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>snapshots-repo</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

</project>
