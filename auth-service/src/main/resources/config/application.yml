spring:
  application:
    name: auth-service
  profiles:
    active: local
  security:
    oauth2:
      client:
        registration:
          google-idp:
            provider: google
            client-id: ${GOOGLE_CLIENT_ID:10959265505-a56ge3f9j1p4p0gf3brntbfu3r1sa58t.apps.googleusercontent.com}
            client-secret: ${GOOGLE_CLIENT_SECRET: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}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
        provider:
          google:
            user-name-attribute: email

management:
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

jwk-set:
  key-store: classpath:jwk-set.pfx
  key-store-password: password
cors:
  allowed-origins: ${CORS_ALLOWED-ORIGINS:http://localhost:3000, http://127.0.0.1:3000}
  allowed-methods: GET, PUT, POST, PATCH, DELETE, OPTIONS
  allowed-headers: Origin, Accept, X-Requested-With, Authorization, Cache-Control, Content-Type
  exposed-headers: Location
  allow-credentials: true
  max-age: 3600

server:
  forward-headers-strategy: framework

---
spring:
  config:
    activate:
      on-profile: '!local'
    import: vault://
  cloud:
    vault:
      authentication: APPROLE # TOKEN
      app-role:
        role-id: b1e30e97-7498-ea51-da88-8328aeef370a
        secret-id: 45c365c7-4b1c-3141-0421-515ca5ccc0e8
        role: auth
        app-role-path: approle
      kv:
        enabled: true
        backend: secret
      uri: http://localhost:8200
      mongodb:
        enabled: true
        role: auth-admin-role
        backend: database
        username-property: spring.data.mongodb.username
        password-property: spring.data.mongodb.password
    consul:
      host: ${SPRING_CLOUD_CONSUL_HOST:localhost}
      port: ${SPRING_CLOUD_CONSUL_PORT:8500}
      discovery:
        instance-id: ${spring.application.name}:${random.value}
        prefer-ip-address: true
        acl-token: ${SPRING_CLOUD_CONSUL_DISCOVERY_ACL_TOKEN:295ffc3b-4edf-7b97-62a4-329f035bcf7c}