version: 2.1

orbs:
  snyk: snyk/snyk@1.2.3
  heroku: circleci/heroku@1.2.6

aliases:
  - &maven-settings-file
      "\"<settings xsi:schemaLocation='http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd' xmlns='http://maven.apache.org/SETTINGS/1.1.0'
              xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'>
            <servers>
              <server>
                   <id>github</id>
                   <username>$GITHUB_USERNAME</username>
                   <password>$GITHUB_PASSWORD</password>
              </server>
              <server>
                    <id>registry-1.docker.io</id>
                    <username>$DOCKER_REGISTRY_USERNAME</username>
                    <password>$DOCKER_REGISTRY_PASSWORD</password>
              </server>
              <server>
                    <id>registry.heroku.com</id>
                    <username>$HEROKU_USERNAME</username>
                    <password>$HEROKU_API_KEY</password>
              </server>
            </servers>
          </settings>\""
commands:
  generate-maven-settings-file:
    parameters:
      settings-file:
        type: string
    steps:
      - run:
          name: Generate Maven Settings File
          command: |
            mkdir -p ~/.m2
            echo -e << parameters.settings-file >> > ~/.m2/settings.xml

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:17-jdk-buster
    working_directory: ~/repo/auth-service
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
      - generate-maven-settings-file:
          settings-file: *maven-settings-file
      - run:
          name: Print Java Version
          command: java -version
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Install Dependencies
          command: mvn dependency:go-offline
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: true
          severity-threshold: low
          token-variable: SNYK_TOKEN
      - run:
          name: Test
          command: mvn -ntp clean test
      - run:
          name: Packaging
          command: mvn -ntp package -DskipTests
      - run:
          name: Quality Analysis
          command: mvn -ntp -Psonar initialize sonar:sonar -Dsonar.login=$SONAR_TOKEN
      - run:
          name: Publish Docker
          command: mvn -ntp -Pjib jib:build -DskipTests -Ddocker.image.name=registry.heroku.com/$HEROKU_APP_NAME/web
  deploy:
    executor: heroku/default
    steps:
      - heroku/install
      - heroku/release-docker-image:
          process-types: web

workflows:
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main